module seven_segment_driver(
    input  logic [3:0] digit,  // 4-bit input for numeric mode
    input  logic [1:0] mode,   // 00: Numeric; 01: Message "PASS"; 10: Message "FAIL"
    output logic [6:0] seg
);
    parameter int POSITION = 0;

    always_comb begin
        case(mode)
            2'b00: begin // Numeric mode
                case(digit)
                    4'd0: seg = 7'b1000000;
                    4'd1: seg = 7'b1111001;
                    4'd2: seg = 7'b0100100;
                    4'd3: seg = 7'b0110000;
                    4'd4: seg = 7'b0011001;
                    4'd5: seg = 7'b0010010;
                    4'd6: seg = 7'b0000010;
                    4'd7: seg = 7'b1111000;
                    4'd8: seg = 7'b0000000;
                    4'd9: seg = 7'b0010000;
                    4'hA: seg = 7'b0001000; 
                    4'hB: seg = 7'b0000011;
                    4'hC: seg = 7'b1000110;
                    4'hD: seg = 7'b0100001;
                    4'hE: seg = 7'b0000110;
                    4'hF: seg = 7'b1111111; 
                    default: seg = 7'b1111111;
                endcase
            end

            2'b01: begin // Message mode "PASS"
                case(POSITION)
                    0: seg = 7'b0001100; // P 
                    1: seg = 7'b0001000; // A
                    2: seg = 7'b0010010; // S
                    3: seg = 7'b0010010; // S
                    default: seg = 7'b1111111;
                endcase
            end

            2'b10: begin // Message mode "FAIL"
                case(POSITION)
                    0: seg = 7'b0001110; // F
                    1: seg = 7'b0001000; // A
                    2: seg = 7'b1111001; // I 
                    3: seg = 7'b1000111; // L 
                    default: seg = 7'b1111111;
                endcase
            end

            default: seg = 7'b1111111; // Off/blank if unknown mode
        endcase
    end
endmodule
